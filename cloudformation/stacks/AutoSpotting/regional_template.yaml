---
# Copyright (c) 2016-2019 Cristian Măgherușan-Stanciu
# Licensed under the Open Software License version 3.0

  AWSTemplateFormatVersion: "2010-09-09"
  Description: "Notification stack for spot termination event"
  Parameters:
    AutoSpottingLambdaARN:
      Description: "The ARN of the main AutoSpotting Lambda function"
      Type: "String"
    LambdaRegionalExecutionRoleARN:
      Description: "Execution Role ARN for Regional Lambda"
      Type: "String"
  Resources:
    TerminationEventRuleFunction:
      Type: AWS::Lambda::Function
      Properties:
        Description: "Invokes the main AutoSpotting Lambda function on spot instance termination notification"
        Handler: "index.handler"
        Runtime: "python3.6"
        Timeout: "300"
        Environment:
          Variables:
            AUTOSPOTTING_LAMBDA_ARN:
              Ref: "AutoSpottingLambdaARN"
        Role:
          Ref: "LambdaRegionalExecutionRoleARN"
        Code:
          ZipFile: |
            from boto3 import client
            from json import dumps
            from os import environ
            from sys import exc_info
            from traceback import print_exc

            lambda_arn = (environ['AUTOSPOTTING_LAMBDA_ARN'])

            def parse_region_from_arn(arn):
                return arn.split(':')[3]

            def handler(event, context):
                snsEvent = {
                    'Records': [
                        {
                            'Event': 'aws:sns',
                            'EventSource': '1.0',
                            'EventSubscriptionArn': 'arn:aws:sns:' + event['region'] + ':FakeAccountId:FakeTopic',
                            'Sns': {
                                'Type': 'Notification',
                                'Message': dumps(event),
                            }
                        }
                    ]
                }
                try:
                    svc = client('lambda', region_name=parse_region_from_arn(lambda_arn))
                    response = svc.invoke(
                        FunctionName=lambda_arn,
                        LogType='Tail',
                        Payload=dumps(snsEvent),
                    )
                    print(response)
                except:
                    print_exc()
                    print("Unexpected error:", exc_info()[0])
    LambdaPermissionAutoSpotTeminationEventRule:
      Type: "AWS::Lambda::Permission"
      Properties:
        Action: "lambda:InvokeFunction"
        FunctionName:
          Ref: "TerminationEventRuleFunction"
        Principal: "events.amazonaws.com"
        SourceArn:
          Fn::GetAtt:
            - "AutoSpotTeminationEventRule"
            - "Arn"
    AutoSpotTeminationEventRule:
      Type: "AWS::Events::Rule"
      Properties:
        Description: "This rule is triggered 2 minutes before AWS terminates a spot instance"
        EventPattern:
          detail-type:
            - "EC2 Spot Instance Interruption Warning"
          source:
            - "aws.ec2"
        State: "ENABLED"
        Targets:
          -
            Id: "AutoSpottingTerminationEventGenerator"
            Arn:
              Fn::GetAtt:
                - "TerminationEventRuleFunction"
                - "Arn"
